// To parse this JSON data, do
//
//     final statesCurrentModel = statesCurrentModelFromJson(jsonString);

import 'dart:convert';

import '../../domain/entities/states_current_entity.dart';

List<StatesCurrentModel> statesCurrentModelFromJson(String str) =>
    List<StatesCurrentModel>.from(
        json.decode(str).map((x) => StatesCurrentModel.fromJson(x)));

String statesCurrentModelToJson(List<StatesCurrentModel> data) =>
    json.encode(List<dynamic>.from(data.map((x) => x.toJson())));

class StatesCurrentModel extends StatesCurrentEntity {
  StatesCurrentModel({
    super.date,
    super.state,
    super.positive,
    super.probableCases,
    super.negative,
    super.pending,
    super.totalTestResultsSource,
    super.totalTestResults,
    super.hospitalizedCurrently,
    super.hospitalizedCumulative,
    super.inIcuCurrently,
    super.inIcuCumulative,
    super.onVentilatorCurrently,
    super.onVentilatorCumulative,
    super.recovered,
    super.lastUpdateEt,
    super.dateModified,
    super.checkTimeEt,
    super.death,
    super.hospitalized,
    super.hospitalizedDischarged,
    super.dateChecked,
    super.totalTestsViral,
    super.positiveTestsViral,
    super.negativeTestsViral,
    super.positiveCasesViral,
    super.deathConfirmed,
    super.deathProbable,
    super.totalTestEncountersViral,
    super.totalTestsPeopleViral,
    super.totalTestsAntibody,
    super.positiveTestsAntibody,
    super.negativeTestsAntibody,
    super.totalTestsPeopleAntibody,
    super.positiveTestsPeopleAntibody,
    super.negativeTestsPeopleAntibody,
    super.totalTestsPeopleAntigen,
    super.positiveTestsPeopleAntigen,
    super.totalTestsAntigen,
    super.positiveTestsAntigen,
    super.fips,
    super.positiveIncrease,
    super.negativeIncrease,
    super.total,
    super.totalTestResultsIncrease,
    super.posNeg,
    super.dataQualityGrade,
    super.deathIncrease,
    super.hospitalizedIncrease,
    super.hash,
    super.commercialScore,
    super.negativeRegularScore,
    super.negativeScore,
    super.positiveScore,
    super.score,
    super.grade,
  });

  factory StatesCurrentModel.fromJson(Map<String, dynamic> json) =>
      StatesCurrentModel(
        date: json["date"] ?? 0,
        state: json["state"] ?? '',
        positive: json["positive"] ?? 0,
        probableCases: json["probableCases"] ?? 0,
        negative: json["negative"] ?? 0,
        pending: json["pending"] ?? 0,
        totalTestResultsSource: json["totalTestResultsSource"] ?? '',
        totalTestResults: json["totalTestResults"] ?? 0,
        hospitalizedCurrently: json["hospitalizedCurrently"] ?? 0,
        hospitalizedCumulative: json["hospitalizedCumulative"] ?? 0,
        inIcuCurrently: json["inIcuCurrently"] ?? 0,
        inIcuCumulative: json["inIcuCumulative"] ?? 0,
        onVentilatorCurrently: json["onVentilatorCurrently"] ?? 0,
        onVentilatorCumulative: json["onVentilatorCumulative"] ?? 0,
        recovered: json["recovered"] ?? 0,
        lastUpdateEt: json["lastUpdateEt"] ?? '',
        dateModified: json["dateModified"] == null
            ? null
            : DateTime.parse(json["dateModified"]),
        checkTimeEt: json["checkTimeEt"] ?? '',
        death: json["death"] ?? 0,
        hospitalized: json["hospitalized"] ?? 0,
        hospitalizedDischarged: json["hospitalizedDischarged"] ?? 0,
        dateChecked: json["dateChecked"] == null
            ? null
            : DateTime.parse(json["dateChecked"]),
        totalTestsViral: json["totalTestsViral"] ?? 0,
        positiveTestsViral: json["positiveTestsViral"] ?? 0,
        negativeTestsViral: json["negativeTestsViral"] ?? 0,
        positiveCasesViral: json["positiveCasesViral"] ?? 0,
        deathConfirmed: json["deathConfirmed"] ?? 0,
        deathProbable: json["deathProbable"] ?? 0,
        totalTestEncountersViral: json["totalTestEncountersViral"] ?? 0,
        totalTestsPeopleViral: json["totalTestsPeopleViral"] ?? 0,
        totalTestsAntibody: json["totalTestsAntibody"] ?? 0,
        positiveTestsAntibody: json["positiveTestsAntibody"] ?? 0,
        negativeTestsAntibody: json["negativeTestsAntibody"] ?? 0,
        totalTestsPeopleAntibody: json["totalTestsPeopleAntibody"] ?? 0,
        positiveTestsPeopleAntibody: json["positiveTestsPeopleAntibody"] ?? 0,
        negativeTestsPeopleAntibody: json["negativeTestsPeopleAntibody"] ?? 0,
        totalTestsPeopleAntigen: json["totalTestsPeopleAntigen"] ?? 0,
        positiveTestsPeopleAntigen: json["positiveTestsPeopleAntigen"] ?? 0,
        totalTestsAntigen: json["totalTestsAntigen"] ?? 0,
        positiveTestsAntigen: json["positiveTestsAntigen"] ?? 0,
        fips: json["fips"] ?? '',
        positiveIncrease: json["positiveIncrease"] ?? 0,
        negativeIncrease: json["negativeIncrease"] ?? 0,
        total: json["total"] ?? 0,
        totalTestResultsIncrease: json["totalTestResultsIncrease"] ?? 0,
        posNeg: json["posNeg"] ?? 0,
        dataQualityGrade: json["dataQualityGrade"] ?? '',
        deathIncrease: json["deathIncrease"] ?? 0,
        hospitalizedIncrease: json["hospitalizedIncrease"] ?? 0,
        hash: json["hash"] ?? '',
        commercialScore: json["commercialScore"] ?? 0,
        negativeRegularScore: json["negativeRegularScore"] ?? 0,
        negativeScore: json["negativeScore"] ?? 0,
        positiveScore: json["positiveScore"] ?? 0,
        score: json["score"] ?? 0,
        grade: json["grade"] ?? '',
      );

  Map<String, dynamic> toJson() => {
        "date": date,
        "state": state,
        "positive": positive,
        "probableCases": probableCases,
        "negative": negative,
        "pending": pending,
        "totalTestResultsSource": totalTestResultsSource,
        "totalTestResults": totalTestResults,
        "hospitalizedCurrently": hospitalizedCurrently,
        "hospitalizedCumulative": hospitalizedCumulative,
        "inIcuCurrently": inIcuCurrently,
        "inIcuCumulative": inIcuCumulative,
        "onVentilatorCurrently": onVentilatorCurrently,
        "onVentilatorCumulative": onVentilatorCumulative,
        "recovered": recovered,
        "lastUpdateEt": lastUpdateEt,
        "dateModified": dateModified,
        "checkTimeEt": checkTimeEt,
        "death": death,
        "hospitalized": hospitalized,
        "hospitalizedDischarged": hospitalizedDischarged,
        "dateChecked": dateChecked,
        "totalTestsViral": totalTestsViral,
        "positiveTestsViral": positiveTestsViral,
        "negativeTestsViral": negativeTestsViral,
        "positiveCasesViral": positiveCasesViral,
        "deathConfirmed": deathConfirmed,
        "deathProbable": deathProbable,
        "totalTestEncountersViral": totalTestEncountersViral,
        "totalTestsPeopleViral": totalTestsPeopleViral,
        "totalTestsAntibody": totalTestsAntibody,
        "positiveTestsAntibody": positiveTestsAntibody,
        "negativeTestsAntibody": negativeTestsAntibody,
        "totalTestsPeopleAntibody": totalTestsPeopleAntibody,
        "positiveTestsPeopleAntibody": positiveTestsPeopleAntibody,
        "negativeTestsPeopleAntibody": negativeTestsPeopleAntibody,
        "totalTestsPeopleAntigen": totalTestsPeopleAntigen,
        "positiveTestsPeopleAntigen": positiveTestsPeopleAntigen,
        "totalTestsAntigen": totalTestsAntigen,
        "positiveTestsAntigen": positiveTestsAntigen,
        "fips": fips,
        "positiveIncrease": positiveIncrease,
        "negativeIncrease": negativeIncrease,
        "total": total,
        "totalTestResultsIncrease": totalTestResultsIncrease,
        "posNeg": posNeg,
        "dataQualityGrade": dataQualityGrade,
        "deathIncrease": deathIncrease,
        "hospitalizedIncrease": hospitalizedIncrease,
        "hash": hash,
        "commercialScore": commercialScore,
        "negativeRegularScore": negativeRegularScore,
        "negativeScore": negativeScore,
        "positiveScore": positiveScore,
        "score": score,
        "grade": grade,
      };
}
